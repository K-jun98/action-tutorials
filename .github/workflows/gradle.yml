# Workflow name
name: ComeOn App Dev CI/CD
# Event Trigger
on:
  push:
    branches: [ "main" ]
# 현재 Workflow를 구성하는 Job들을 정의
jobs:

  # 하나의 Job에 대한 식별자를 설정. test_and_build는 하나의 Job이 된다.
  test_and_build:

    # 실행환경 설정
    runs-on: ubuntu-latest

    # 현재 Job을 구성하는 Step들을 정의
    steps:

      # `-`으로 Step을 구분한다. name은 Step의 식별자를 정의한다.
      - name: Checkout
        # Action을 사용하여 Step을 구성한다.
        uses: actions/checkout@v3
        # Action에 사용될 변수값 지정

      ### runner application java 설정
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: zulu

      ### gradlew 실행 권한 부여
      - name: Grant execute permisstion for gradlew
        # shell 명령어로 Step의 Task를 지정한다.
        run: chmod +x gradlew

        ### project test
      - name: Test
        run: ./gradlew clean test -Pprofile=test

        ### project build
      - name: Build
        run: ./gradlew clean build

        ### Docker Build (2)
      - name: docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/boot-prac-ci .

        # DockerHub Login (3)
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

        # Docker Hub push (4)
      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/boot-prac-ci:latest

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }} # EC2 인스턴스 퍼블릭 DNS
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }} # pem 키
          # 도커 작업
          script: |
            sudo docker stop $(docker ps -qa)
            sudo docker rm $(docker ps -a -q)
            sudo docker image prune -a -f
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/boot-prac-ci:latest
            sudo docker run -d --log-driver=syslog -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/boot-prac-ci:latest
            
